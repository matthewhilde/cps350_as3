package application;

import java.util.Comparator;

/*
 * CPS 350: Assignment 3
 * 10/9/18
 * @author Matthew Hildebrandt
 * @author Antall Nguyen
 * 
 * The purpose of this assignment is to implement sorting algorithms
 * for the autocomplete application
 */
public class BinarySearchDeluxe {
	
	/* Returns the index of the first key in a[] that equals the search key,
	or -1 if no such key. */
	 public static <Key> int firstIndexOf(Key[] a, Key key, Comparator<Key>
	comparator) throws java.lang.NullPointerException
	 {
		 if ( a.equals(null) || key.equals(null) || comparator.equals(null) )
		 	{throw new java.lang.NullPointerException("ERROR: invalid parameters in firstIndexOf()...");}
		 
		 // implementation here...
		 int result=-1;
		 for (int i=0;i<a.length;i++) { // HOWTO: use comparator***
			 if (comparator.compare(a[i], key)==0) {return i;}
		 }
		 return result;
	 }
	 
	 /* Returns the index of the last key in a[] that equals the search key,
	or -1 if no such key. */
	 public static <Key> int lastIndexOf(Key[] a, Key key, Comparator<Key>
	comparator) throws java.lang.NullPointerException
	 {
		 if ( a.equals(null) || key.equals(null) || comparator.equals(null) )
		 	{throw new java.lang.NullPointerException("ERROR: invalid parameters in lastIndexOf()...");}
	 	// implementation here...
		int result=-1;
	 	for (int i=0; i<a.length;i++) {
	 		if (comparator.compare(a[i], key)==0) {result=i;}
	 	}
		return result; 	
	 }
}
